name: CI for Pet Tracker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  FLASK_ENV: ${{ secrets.FLASK_ENV }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_NAME: ${{ secrets.DB_NAME }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Lint with flake8
      run: |
        flake8 app

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build -f Dockerfile_app -t trackerpet:latest .

  deploy:
    runs-on: ubuntu-latest
    needs: build 

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy via SSH
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd /home/${{ secrets.SSH_USER }}/app         # путь к твоему проекту
          git pull origin main           # забираем свежий код
          docker compose down            # выключаем старые контейнеры
          docker compose up -d --build   # билдим и поднимаем новые
        EOF
